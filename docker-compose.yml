services:
  # PostgreSQL with pgvector extension for profile memory storage
  postgres:
    image: pgvector/pgvector:pg16
    container_name: memmachine-postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-memmachine}
      POSTGRES_USER: ${POSTGRES_USER:-memmachine}
      POSTGRES_PASSWORD: ${POSTGRES_PASS:-memmachine_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-memmachine} -d ${POSTGRES_DB:-memmachine}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - memmachine-network

  # Neo4j database for graph storage
  neo4j:
    image: neo4j:5.23-community
    restart: unless-stopped
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"  # HTTP
      - "${NEO4J_HTTPS_PORT:-7473}:7473"  # HTTPS
      - "${NEO4J_PORT:-7687}:7687"  # Bolt
    environment:
      NEO4J_EDITION: community
      NEO4J_AUTH: ${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-neo4j_password}
      NEO4J_server_bolt_thread__pool__max__size: 2000
      NEO4J_server_memory_heap_initial__size: ${NEO4J_HEAP_INIT:-2g}
      NEO4J_server_memory_heap_max__size: ${NEO4J_HEAP_MAX:-3G}
      NEO4J_server_default__listen__address: 0.0.0.0
      NEO4J_server_bolt_listen__address: 0.0.0.0:7687
      NEO4J_server_http_listen__address: 0.0.0.0:7474
      NEO4J_server_https_listen__address: 0.0.0.0:7473
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER:-neo4j}", "-p", "${NEO4J_PASSWORD:-neo4j_password}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - memmachine-network

  # MemMachine application
  memmachine:
    image: ${DOCKER_MEMMACHINE_IMG}
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${MEMORY_SERVER_PORT}:8080"
    environment:
      # Database configuration
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

      # Neo4j configuration
      NEO4J_HOST: ${NEO4J_HOST:-neo4j}
      NEO4J_PORT: ${NEO4J_PORT:-7687}
      NEO4J_USER: ${NEO4J_USER:-neo4j}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}

      # Application configuration
      MEMORY_CONFIG: ${MEMORY_CONFIG}
      MCP_BASE_URL: ${MCP_BASE_URL}
      GATEWAY_URL: ${GATEWAY_URL}
      FAST_MCP_LOG_LEVEL: ${FAST_MCP_LOG_LEVEL:-INFO}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ./configuration.yml:/etc/memmachine/configuration.yml:ro
      - memmachine_logs:/tmp/memory_logs
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MEMORY_SERVER_PORT}/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - memmachine-network

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    ports:
      - "3000:8080"
    volumes:
      - open-webui:/app/backend/data
    networks:
      - memmachine-network
    environment:
      ENV: PROD
      WEBUI_AUTH: "true"
      DEFAULT_USER_ROLE: "user"
      DEFAULT_MODELS: "gpt-4o-mini"
      ENABLE_SIGNUP: "true"
      ENABLE_CODE_EXECUTION: "false"
      #DATA_DIR: "/app/backend/data"
      LOG_LEVEL: "INFO"
      OPENID_PROVIDER_URL: ${OPENID_PROVIDER_URL}
      #DATABASE_URL: "sqlite:///app/backend/data/openwebui.db"
      WEBUI_URL: ${WEBUI_URL}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      ENABLE_OAUTH_SIGNUP: ${ENABLE_OAUTH_SIGNUP}
      OAUTH_MERGE_ACCOUNTS_BY_EMAIL: "true"
      ENABLE_USER_DELETION: "true"
      USER_DELETION_DAYS: "14"
      EXCLUDED_USERS_FROM_DELETION: "admin,admin@memverge.com"
      RATE_LIMIT_ENABLED: "true"
      RATE_LIMIT_REQUESTS_PER_MINUTE: "5"
      RATE_LIMIT_REQUESTS_PER_HOUR: "50"
      RATE_LIMIT_REQUESTS_PER_DAY: "100"
      RATE_LIMIT_REQUESTS_PER_MONTH: "500"
      RATE_LIMIT_BURST_SIZE: "5"

  middleware:
    image: ${DOCKER_MIDDLEWARE_IMG}
    build:
      context: ./examples
      dockerfile: Dockerfile
    environment:
      - EXAMPLE_SERVER_PORT=8000
      - MEMORY_BACKEND_URL="http://memmachine:8080"
    ports:
      - "8000:8000"
    networks:
      - memmachine-network
  frontend:
    image: ${DOCKER_FRONTEND_IMG}
    build:
      context: ./examples/frontend
      dockerfile: Dockerfile
    environment:
      - MEMORY_BACKEND_URL="http://middleware:8000"
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL="INFO"
      - STREAMLIT_SERVER_PORT="8502"
    ports:
      - "8501:8501"
    networks:
      - memmachine-network


volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  memmachine_logs:
    driver: local
  open-webui:
    driver: local

networks:
  memmachine-network:
    driver: bridge
    name: memmachine-network